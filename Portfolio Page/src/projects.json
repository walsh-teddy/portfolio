{
    "projects": [
        {
            "name":"BlankFormatProject",
            "link":"yourMothersHouse",
            "tags":["NUNYA"],
            "paragraphs": [
                "IfYouSeeThisThenSomethingIsVeryWrong"
            ],
            "gallery": [
                {
                    "src":"deleteMe",
                    "alt":"deleteMe",
                    "caption":"deleteMe"
                }
            ]

        },

        {
            "name": "Boo!",
            "link": "https://narraator0.itch.io/boo",
            "tags":["Programming", "Game Design"],
            "paragraphs": [
                "A \"silly-scary\" game where you run from a ghost on halloween night trying to escape his mansion. Luckily you’re dressed up as a dinosaur and that's terrifying so if you find one of your own candy pieces that's been lost around the mansion, you can turn to the monster and say the titular \"Boo!\" and scare the monster away for a short time, giving what would normally be a simple game about running an extra level of depth and resource management.",

                "I made \"Boo!\" as part of a class project with a team of 4 other talented students. Together we go by \"The Halloweenies\". In this class we practiced team coordination and communication by managing our own sprint tasks, reviewing and improving our own procedures, meeting regularly, and combining our work with github.",

                "On The Halloweenies, I was one of the programmers and I was in charge of the monster’s AI, which used different game states (which are reflected in the monster’s eye light color) and Unity’s navigation system. I was also in charge of coding the logic for the candy objects (picking them up and respawning them after a time), and scaring the monster. You may also recognize the voice of the monster ;)",

                "Some of the problems that we had to troubleshoot in this project were a bug where the monster would move erratically after it was scared and came back. It was because while it was scared, its movement system was changed to being pushed in a direction rather than using Unity’s navigation system, so the monster was being pushed outside of the navmesh. Changing it to use the navigation system even when scared fixed that problem. We also noticed that during our weekly meetings, we weren't working as productively as we wanted. We realized it was because the meetings would just drag on and on so if we didn’t finish our work this minute then it was fine because we could do it later. To fix this, we added a 90 minute limit to our meetings, which forced us to work more productively if we wanted to finish what we wanted done. This also had the nice effect of we had more time at the end of our day that was no longer taken up by meeting times!"
            ],
            "gallery": [
                {
                    "src": "media/Boo!1.png",
                    "alt": "A screenshot of almost being caught",
                    "caption": "Almost being caught!"
                },
                {
                    "src": "media/Boo!2.png",
                    "alt": "A screenshot of scaring the monster",
                    "caption": "Scaring the monster"
                },
                {
                    "src": "media/Boo!3.png",
                    "alt": "A screenshot of the win screen",
                    "caption": "The win screen (which I bet you can't get)"
                }
            ]
        },

        {
            "name":"Flower Creator",
            "link":"https://people.rit.edu/tjw6911/330/project-2/challenge.html",
            "tags":["Programming", "Game Design", "Web Design"],
            "paragraphs": [
                "The Flower Creator uses something called \"phyllotaxis\" which is an algorithmic way using the golden ratio to simulate how the buds and petals of a flower would grow. I tried messing around with the numbers a bit and found it was quite a fun way to make other interesting patterns. I decided to expand on that idea and make a whole app out of it!",

                "It was made for a class project using Javascript and the canvas drawing API primarily as well as HTML and Bulma CSS for the framework around that. Drawing the flowers was surprisingly easy since the algorithm was already written. The difficult part was reading all the different user inputs and doing the math around them to convert that into an actual flower.",

                "I didn’t just want to make a sandbox app so I also made a game out of it. The challenge mode randomly generates a flower and scores you to see how closely you can match the settings. The maximum score is 500 and my personal high score is 440. It uses local storage to save your personal highscore to your browser.",

                "Some of the issues I ran into during this project that I had to correct were centered around the inherent complexity. Phyllotaxis is not a simple algorithm but I don’t want the user to read a long research paper before messing around, so instead I added simple descriptions in the form of titles (the text that appears when you hover your mouse over an HTML element) of what each setting does. I also received the feedback that challenge mode was way too difficult since there were too many variables, so instead I lowered the amount of settings that the user had to guess down to 1 which was randomly chosen each round.",

                "If I were to revisit this project, I would first touch up the challenge mode. I would add different difficulties which add more and more settings that you have to guess. I also would like to add an online aspect to the app. It would be very interesting for users to be able to save and share different flower creations that they like as well as have a global leaderboard for the challenge mode. To do this, I would use google’s firebase system."
                
            ],
            "gallery": [
                {
                    "src":"media/FlowerCreator1.png",
                    "alt":"A screenshot of the default flower",
                    "caption":"The default flower"
                },
                {
                    "src":"media/FlowerCreator2.png",
                    "alt":"A screenshot of a custom flower",
                    "caption":"A combination I found that draws exactly strait lines"
                }
            ]

        },

        {
            "name":"Raining Cats and Dogs!",
            "link":"https://people.rit.edu/~tjw6911/235/Project3/",
            "tags":["Programming", "Game Design", "Web Design"],
            "paragraphs": [
                "A fun arcade shooter built around a play on words! Shoot down the cats but don’t hit a dog! (Don’t worry, that’s switchable). See how high of a score you can get. My personal record is 70 (and as of writing, that's the world record.)",

                "Built in JavaScript using PixiJS for a class project. I was not working in a team so the game was all created solo. I used the framework of a previous lab assignment we were given called \"circle blast\" that helped me with rendering different scenes and moving objects around (as part of learning Pixi).",

                "This project taught me a lot about Pixi specifically, how to test collisions, how to pivot a shape towards a point (and all the strange math that comes with pointing it in the correct quadrant using tangents), tracking mouse locations and more.",

                "I ran into quite a few issues that I had to troubleshoot. Some were as simple as seeing the error log and realizing that I misspelled a variable name and others were more complex, like making the bullets appear out of the ends of the gun. That required me to go back to previous projects that I did and look online for working code that I could reference. Turns out that PIXI.Graphics objects have a built in X and Y already."
            ],
            "gallery": [
                {
                    "src":"media/RainingCatsAndDogs0.PNG",
                    "alt":"A screenshot of the title screen",
                    "caption":"The title screen"
                },
                {
                    "src":"media/RainingCatsAndDogs1.PNG",
                    "alt":"A screenshot of the gameplay",
                    "caption":"A screenshot of the gameplay"
                }
            ]

        },

        {
            "name":"Magic Flavor Finder",
            "link":"https://people.rit.edu/~tjw6911/235/Project2/",
            "tags":["Programming", "Web Design"],
            "paragraphs": [
                "I love Magic The Gathering, but not for the typical reasons people like it. Sure, it's a deep level strategy game with great game design that I love, and yes it attracts many collectors, but my main draw to it is its world. I love the setting of Magic The Gathering, all the different strange planes with wild spells, interesting characters, and exciting story that showcases all these different ideas beautifully.",

                "I made this \"Magic Flavor Finder\" to take all the cards of Magic The Gathering and present the flavorful aspects that I love about them, without mechanics, a mostly unique idea from what I can tell.",

                "It uses the Scryfall API. It works by taking different kinds of inputs from the user about the parameters they want (the mana color, the sort order, ect) and custom makes a get request URL to send to the Scryfall server.",

                "The program is pretty straightforward to use. Simply fill in the parameters you want to see and hit the search button! I even included the Scryfall URL that I construct as a little peek behind the curtains.",

                "This project was also done for a class, requiring that we integrate an API into our program. Scryfall was one of the suggested APIs so that's where I started. The project had some interesting challenges, such as learning how to format the Scryfall URL on my own using their public documentation, writing CSS for part of the HTML code that didn’t exist yet because it had to get added in with the JavaScript code I wrote, retrieving information from HTML buttons and other input fields, and saving/retrieving info from local storage."
            ],
            "gallery": [
                {
                    "src":"media/MagicFlavorFinder0.PNG",
                    "alt":"Screenshot of a group of results",
                    "caption":"Finding \"Abzan\" (white, black, and green) cards sorted by rarity"
                },

                {
                    "src":"media/MagicFlavorFinder1.PNG",
                    "alt":"Screenshot of a specific result",
                    "caption":"The result for one of my favorite cards, \"Eerie Ultimatum\""
                }
            ]

        },

        {
            "name":"D&D Spellbook",
            "link":"https://people.rit.edu/tjw6911/330/project-1/home",
            "tags":["Programming", "Web Design"],
            "paragraphs": [
                "The D&D Spellbook is an app that helps users create and track what spells their Dungeons and Dragons 5th Edition character has. This project I’m particularly satisfied with because several of my friends actually use it regularly to help manage their characters! I have been playing D&D since 2017 and as such I’m intimately familiar with the character creation process, both making my own characters and walking new players through the steps needed. One of the most complex and time consuming steps in my experience is reading through all the spells available and picking from them. I made this app to help newer players understand and keep track of their spell sheet.",

                "I made this as part of a class project for Rich Media Web App Development 1. The main requirement was to use an API to make an app as well as Firebase to store different accounts of data. Me, being the nerd that I am, was immediately drawn to <a href=”https://www.dnd5eapi.co/”>the D&D 5e API</a> (also I already used the Magic The Gathering API). The app takes parameters from the user (spellcasting classes, spell levels, and spell school) and formats a fetch request to the D&D API. Once it gets the response back, it formats all of the spell objects into different spell cards to display on the page!",

                "After that, it uses a combination of local storage and firebase to record each user's actual spell list they’ve constructed. I also added in a similar function (minus the API request) to help the user calculate how many spells and of what level they should take based on their class, level, and spellcasting ability modifier.",

                "Lastly, I used bulma css to make the whole page look clean and programmed web components to implement repeated HTML elements across the different pages (like the navbar, header, and spell cards).",

                "There were a few features that I originally planned on adding, but unfortunately ran out of time before the project due date, which I would add if/when I choose to revisit this project. First, I’m a big D&D Homebrew creator, so it would’ve been really cool to not only be able to add my own custom D&D spells to appear on the app, but also allow other people to create and upload theirs as well! Second, a way to collapse down a spell card if its too long and then manually expand it, so that the formatting is neater. Lastly, I wanted to copy the styles from the actual player handbook to make it feel like you were reading through it and not a separate app."
            ],
            "gallery": [
                {
                    "src":"media/Spellbook1.PNG",
                    "alt":"Screenshot of the home screen",
                    "caption":"The homescreen"
                },
                {
                    "src":"media/Spellbook2.PNG",
                    "alt":"Screenshot of results",
                    "caption":"Every 6th level conjuration druid spell"
                },
                {
                    "src":"media/Spellbook3.PNG",
                    "alt":"Screenshot of search page",
                    "caption":"My 14th level druid getting included above the search parameters"
                }
            ]

        }
    ]
}